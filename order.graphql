type Query {
  order(id: ID!): Order
  listOrders(cursor: ID, limit: Int, filter: String): OrderListWithCursor
}

type Mutation {
  createOrder(input: CreateOrderInput): Order
  updateOrder(id: ID!, input: UpdateOrderInput): Order
}

scalar Timestamp

type Order {
  id: ID!
  created_at: Timestamp!
  updated_at: Timestamp!
  courier: String
  courer_account: String
  comments: String
  payment: String
  purchase_order_num: String
  status: String
  consumer: String
  payer: String
  purchaser: String
  items: [String]
}

type OrderListWithCursor {
  orders: [Order!]!
  nextCursor: ID!
  previousCursor: ID!
  limit: Int
  totalCount: Int!
}

input CreateOrderInput {
  courier: String!
  courer_account: String!
  comments: String
  payment: String!
  purchase_order_num: String!
  status: String!
  consumer: String!
  payer: String!
  purchaser: String!
  items: [String]!
}

input UpdateOrderInput {
  courier: String
  courer_account: String
  comments: String
  payment: String
  purchase_order_num: String
  status: String
  items: [String]
}
